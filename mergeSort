const merge = (arr1, arr2) => {
  let result = [];
  while (arr1.length && arr2.length) {
    arr1[0] < arr2[0] ? result.push(arr1.shift()) : result.push(arr2.shift());
  }
  arr1.length ? (result = result.concat(arr1)) : (result = result.concat(arr2));

  return result;
};

let a = [1, 3, 5, 7];
let b = [2, 4, 6, 8];
merge(a, b);

const mergeSort = (nums) => {
  //base
  if (nums.length < 2) return nums;
  let left = mergeSort(nums.slice(0, Math.floor(nums.length / 2)));
  let right = mergeSort(nums.slice(Math.floor(nums.length / 2)));

  return merge(left, right);
};

mergeSort([9, 8, 7, 6, 5, 4, 34]);
